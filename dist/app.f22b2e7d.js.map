{"version":3,"sources":["toast/toast.js","app.js"],"names":["generateToast","_ref","columnId","message","_ref$backgroundColor","backgroundColor","_ref$color","color","_ref$length","length","column","document","querySelector","concat","console","log","insertAdjacentHTML","toast","addEventListener","remove","exports","_toast","require","cols","querySelectorAll","colorCodes","locks","copyColorToClick","text","navigator","clipboard","writeText","generateRandomColor","i","Math","floor","random","setRandomColors","isInitial","colors","getColorsFromHash","forEach","col","index","isLocked","classList","contains","button","push","textContent","style","background","setTextColor","updateColorsHash","luminance","chroma","arguments","undefined","location","hash","map","toString","substring","join","split","elem","event","target","id","type","dataset","node","tagName","toLowerCase","children","toggle","preventDefault","code"],"mappings":"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","file":"app.f22b2e7d.js","sourceRoot":"..","sourcesContent":["export const generateToast = ({\r\n    columnId,\r\n    message,\r\n    backgroundColor = \"#4682B4\",\r\n    color = \"#fffffe\",\r\n    length = \"2000ms\"\r\n  }) => {\r\n    const column = document.querySelector(`div[id=container${columnId}]`);\r\n    console.log(column);\r\n  \r\n    column.insertAdjacentHTML(\r\n      \"afterbegin\",\r\n      `<p class='toast'\r\n        style=\"background-color: ${backgroundColor};\r\n        color: ${color};\r\n        animation-duration: ${length}\">\r\n        ${message}\r\n        </p>`\r\n    );\r\n    const toast = document.querySelector(\".toast\");\r\n    toast.addEventListener(\"animationend\", () => {\r\n      toast.remove();\r\n    });\r\n  };\r\n  ","import { generateToast} from \"./toast/toast.js\";\r\n\r\nconst cols = document.querySelectorAll(\".col\");\r\nconst colorCodes = document.querySelectorAll('h2[data-type=\"copy\"]');\r\nconst locks = document.querySelectorAll('button[data-type=\"lock\"]');\r\n\r\ncolorCodes.forEach((elem) => {\r\n  elem.addEventListener(\"click\", (event) => {\r\n    copyColorToClick(event.target.textContent);\r\n    generateToast({ columnId: event.target.id, message: \"Copied\" });\r\n  });\r\n});\r\n\r\nlocks.forEach((elem) => {\r\n  elem.addEventListener(\"click\", (event) => {\r\n    const type = event.target.dataset.type;\r\n    if (type === \"lock\") {\r\n      const node =\r\n        event.target.tagName.toLowerCase() === \"i\"\r\n          ? event.target\r\n          : event.target.children[0];\r\n      node.classList.toggle(\"fa-lock-open\");\r\n      node.classList.toggle(\"fa-lock\");\r\n    } else if (type === \"copy\") {\r\n      // copyColorToClick(event.target.textContent);\r\n      generateToast({ message: \"fff\" });\r\n    }\r\n  });\r\n});\r\n\r\n//obnovení barev při zmačknutí spacebaru\r\ndocument.addEventListener(\"keydown\", (event) => {\r\n  event.preventDefault();\r\n  if (event.code.toLowerCase() === \"space\") {\r\n    setRandomColors();\r\n  }\r\n});\r\n\r\n//kopírování kódu barvy\r\nfunction copyColorToClick(text) {\r\n  return navigator.clipboard.writeText(text);\r\n}\r\n\r\nfunction generateRandomColor() {\r\n  const hexCode = \"0123456789ABCDEF\";\r\n  let color = \"\";\r\n  for (let i = 0; i < 6; i++) {\r\n    color += hexCode[Math.floor(Math.random() * hexCode.length)];\r\n  }\r\n  return \"#\" + color;\r\n}\r\n\r\n//obnovení barev\r\nfunction setRandomColors(isInitial) {\r\n  const colors = isInitial ? getColorsFromHash() : [];\r\n\r\n  cols.forEach((col, index) => {\r\n    const isLocked = col.querySelector(\"i\").classList.contains(\"fa-lock\");\r\n    const text = col.querySelector(\"h2\");\r\n    const button = col.querySelector(\"button\");\r\n\r\n    if (isLocked) {\r\n      colors.push(text.textContent);\r\n      return;\r\n    }\r\n\r\n    const color = isInitial\r\n      ? colors[index]\r\n        ? colors[index]\r\n        : generateRandomColor()\r\n      : generateRandomColor();\r\n\r\n    if (!isInitial) {\r\n      colors.push(color);\r\n    }\r\n\r\n    text.textContent = color;\r\n    col.style.background = color;\r\n    setTextColor(text, color);\r\n    setTextColor(button, color);\r\n  });\r\n\r\n  updateColorsHash(colors);\r\n}\r\n\r\nfunction setTextColor(text, color) {\r\n  const luminance = chroma(color).luminance();\r\n  text.style.color = luminance > 0.5 ? \"#34282C\" : \"#FFFFF0\";\r\n}\r\n\r\nfunction updateColorsHash(colors = []) {\r\n  document.location.hash = colors\r\n    .map((col) => {\r\n      return col.toString().substring(1);\r\n    })\r\n    .join(\"-\");\r\n}\r\n\r\nfunction getColorsFromHash() {\r\n  if (document.location.hash.length > 1) {\r\n    return document.location.hash\r\n      .substring(1)\r\n      .split(\"-\")\r\n      .map((color) => \"#\" + color);\r\n  }\r\n  return [];\r\n}\r\n\r\nsetRandomColors(true);\r\n"]}